import streamlit as st
import pandas as pd
import numpy as np

# --- уГЪуГ╝уВ╕шинхоЪуБиуГЗуВ╢уВдуГ│ ---
st.set_page_config(layout="wide", page_title="уВ╣уГЮуВ╣уГн уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣ шинхоЪхИдхИеуГДуГ╝уГл")

# шГМцЩпчФ╗хГПуБоCSS (GitHubуБлчФ╗хГПуВТщЕНч╜оуБЧуБЯха┤хРИуБоуГСуВ╣уВТцГ│хоЪ)
# **х┐ЕуБЪ YOUR_GITHUB_USERNAME уБи YOUR_REPO_NAME уВТуБВуБкуБЯуБоуВВуБоуБлч╜оуБНцПЫуБИуБжуБПуБауБХуБД**
background_image_css = """
<style>
/* хЯ║цЬмчЪДуБкHTML/BodyуВ╣уВ┐уВдуГлуВТуГкуВ╗уГГуГИуБЧуАБуВкуГ╝уГРуГ╝уГХуГнуГ╝уВТstAppуБлф╗╗уБЫуВЛ */
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%; /* щлШуБХуВТ100%уБлшинхоЪ */
    overflow: hidden; /* bodyшЗкф╜УуБоуВ╣уВпуГнуГ╝уГлуБпчжБцнвуБЧуАБstAppуБМуВ╣уВпуГнуГ╝уГлуВТхИ╢х╛б */
}

/* StreamlitуВвуГЧуГкхЕиф╜УуБоуВ│уГ│уГЖуГК */
.stApp {
    background-image: url("https://raw.githubusercontent.com/0221Yoshinari/karakuri-setting-tool/main/images/karakuri_bg.png"); /* уБУуБУуВТуБВуБкуБЯуБоGitHubуГкуГЭуВ╕уГИуГкхЖЕуБочФ╗хГПуГСуВ╣уБлф┐оцнг */
    background-size: cover; /* чФ╗щЭвхЕиф╜УуВТшжЖуБЖ */
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed; /* шГМцЩпуБпхЫ║хоЪуБоуБ╛уБ╛уАБуВ╣уВпуГнуГ╝уГлуБЧуБжуВВх╕╕уБлчФ╗хГПуБМшжЛуБИуВЛ */
    min-height: 100vh; /* уВвуГЧуГкхЕиф╜УуБоцЬАх░ПщлШуБХуВТуГУуГеуГ╝уГЭуГ╝уГИуБощлШуБХуБлхРИуВПуБЫуВЛ */
    height: 100%; /* stAppуБощлШуБХуВТшжкшжБч┤ая╝Иbodyя╝ЙуБлхРИуВПуБЫуВЛ */
    overflow-y: auto; /* тШЕstAppуВ│уГ│уГЖуГКшЗкф╜УуБМч╕жцЦ╣хРСуБлуВ╣уВпуГнуГ╝уГлуБзуБНуВЛуВИуБЖуБлшинхоЪтШЕ */
    position: relative; /* z-indexуБоуБЯуВБуБлх┐ЕшжБ */
    display: flex;
    flex-direction: column; /* хнРшжБч┤ауВТч╕жуБлф╕жуБ╣уВЛ */
}

/* шГМцЩпчФ╗хГПуБоф╕КуБлщЗНуБнуВЛуВкуГ╝уГРуГ╝уГмуВд */
.stApp::before {
    content: "";
    position: fixed; /* уВкуГ╝уГРуГ╝уГмуВдуВВхЫ║хоЪ */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.15); /* щАПцШОх║жуВТ0.3уБлхдЙцЫ┤ (чФ╗хГПуБМ50%чиЛх║жшЦДуБПшжЛуБИуВЛуВИуБЖуБл) */
    z-index: 1;
    pointer-events: none; /* тШЕтШЕтШЕуБУуБУуВТш┐╜хКая╝ЪуВкуГ╝уГРуГ╝уГмуВдуБМуВпуГкуГГуВпуВДуВ╣уВпуГнуГ╝уГлуВТуГЦуГнуГГуВпуБЧуБкуБДуВИуБЖуБлуБЩуВЛтШЕтШЕтШЕ */
}

/* уГбуВдуГ│уВ│уГ│уГЖуГ│уГДуГЦуГнуГГуВпя╝ИхЕехКЫщаЕчЫоуБкуБйуБМуБВуВЛщГихИЖя╝Й */
.main .block-container {
    padding-top: 2rem;
    padding-bottom: 2rem;
    z-index: 2; /* уВ│уГ│уГЖуГ│уГДуБМшГМцЩпчФ╗хГПуВИуВКцЙЛхЙНуБлцЭеуВЛуВИуБЖуБл */
    position: relative; /* z-indexуБоуБЯуВБуБлх┐ЕшжБ */
    background-color: rgba(0, 0, 0, 0.7); /* уВ│уГ│уГЖуГ│уГДуВиуГкуВвуБошГМцЩпшЙ▓уВТхНКщАПцШОуБл */
    border-radius: 10px;
    padding: 30px;
    flex-grow: 1; /* уВ│уГ│уГЖуГ│уГДуГЦуГнуГГуВпуБМхИйчФихПпшГ╜уБкуВ╣уГЪуГ╝уВ╣уВТхЯЛуВБуВЛуВИуБЖуБлцИРщХ╖ */
}

/* уБЭуБоф╗ЦуБоуВ╣уВ┐уВдуГлшк┐цХ┤я╝ИшЙ▓уБкуБйя╝Й */
h1, h2, h3, h4, h5, h6, p, label, .st-ck, .st-bj, .st-bq {
    color: white !important;
}
.stSelectbox div[data-baseweb="select"] {
    background-color: #333 !important;
    color: white !important;
}
.stSelectbox div[data-baseweb="select"] div[data-testid="stSelectboxDropdown"] {
    background-color: #333 !important;
    color: white !important;
}
.stTextInput > div > div > input {
    background-color: #333 !important;
    color: white !important;
}
.stButton>button {
    background-color: #D35400; /* уГЬуВ┐уГ│уБошГМцЩпшЙ▓ */
    color: white; /* уГЬуВ┐уГ│уБоцЦЗхнЧшЙ▓ */
    border-radius: 5px;
    border: none;
    padding: 10px 20px;
}
.stButton>button:hover {
    background-color: #E67E22;
}
.css-1r6dm7f { /* markdown text color */
    color: white;
}
</style>
"""
st.markdown(background_image_css, unsafe_allow_html=True)

# уГШуГГуГАуГ╝
st.title("уВ╣уГЮуВ╣уГн уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣ шинхоЪхИдхИеуГДуГ╝уГл")
st.markdown("---")

# --- шинхоЪчд║хФЖуБохЯ║ц║ЦхАд (чзБуБошгБщЗПуБзшинхоЪуАВхоЯщЪЫуБошзгцЮРхАдуБичХ░уБкуВЛха┤хРИуБМуБВуВКуБ╛уБЩ) ---
# хРДшинхоЪуБохЯ║чдОуВ╣уВ│уВвя╝ИхИЭцЬЯхАдя╝Й
# шинхоЪLуБпшАГцЕоуБЧуБкуБД
initial_setting_scores = {
    'шинхоЪ1': 100, 'шинхоЪ2': 110, 'шинхоЪ4': 150, 'шинхоЪ5': 180, 'шинхоЪ6': 200
}

# CZх╜УщБ╕уВ▓уГ╝уГацХ░уБлуВИуВЛшинхоЪуВ╣уВ│уВвшк┐цХ┤я╝ИчЫохоЙя╝Й
# ф╜ОуВ▓уГ╝уГацХ░CZуБМхдЪуБДуБ╗уБйщлШшинхоЪуБлхКачВ╣уАБщлШуВ▓уГ╝уГацХ░CZуБпф╜ОшинхоЪуБлхКачВ╣/щлШшинхоЪуБлц╕ЫчВ╣
cz_point_score_adjust = {
    'low_point_bonus_high': {'шинхоЪ4': 5, 'шинхоЪ5': 10, 'шинхоЪ6': 15}, # 100Gф╗ехЖЕCZща╗х║жуБМщлШуБДха┤хРИ
    'over_1000_penalty': {'шинхоЪ6': -100, 'шинхоЪ5': -50, 'шинхоЪ4': -20} # 1000ptш╢ЕуБИCZуБМхЗ║чП╛уБЧуБЯха┤хРИ
}

# уГЖуГ╝уГЦуГлщБ╕цКЮчОЗя╝ИчФ╗хГПцГЕха▒уБлхЯ║уБеуБПя╝Й
table_rates = {
    'шинхоЪ1': {'уГЖуГ╝уГЦуГл1': 0.49, 'уГЖуГ╝уГЦуГл2': 0.45, 'уГЖуГ╝уГЦуГл3': 0.04, 'уГЖуГ╝уГЦуГл4': 0.02},
    'шинхоЪ2': {'уГЖуГ╝уГЦуГл1': 0.37, 'уГЖуГ╝уГЦуГл2': 0.54, 'уГЖуГ╝уГЦуГл3': 0.03, 'уГЖуГ╝уГЦуГл4': 0.06},
    'шинхоЪ4': {'уГЖуГ╝уГЦуГл1': 0.36, 'уГЖуГ╝уГЦуГл2': 0.52, 'уГЖуГ╝уГЦуГл3': 0.04, 'уГЖуГ╝уГЦуГл4': 0.08},
    'шинхоЪ5': {'уГЖуГ╝уГЦуГл1': 0.52, 'уГЖуГ╝уГЦуГл2': 0.36, 'уГЖуГ╝уГЦуГл3': 0.08, 'уГЖуГ╝уГЦуГл4': 0.04},
    'шинхоЪ6': {'уГЖуГ╝уГЦуГл1': 0.42, 'уГЖуГ╝уГЦуГл2': 0.42, 'уГЖуГ╝уГЦуГл3': 0.08, 'уГЖуГ╝уГЦуГл4': 0.08},
}
# уГЖуГ╝уГЦуГлчд║хФЖуБощЗНуБ┐я╝ИхРДшинхоЪуБлуБйуВМуБауБСх╜▒щЯ┐уБЩуВЛуБЛя╝Й
table_score_weights = {
    'уГЖуГ╝уГЦуГл1': {'шинхоЪ1': 10, 'шинхоЪ2': 0, 'шинхоЪ4': -5, 'шинхоЪ5': 5, 'шинхоЪ6': -5}, # хеЗцХ░чд║хФЖ
    'уГЖуГ╝уГЦуГл2': {'шинхоЪ1': 0, 'шинхоЪ2': 10, 'шинхоЪ4': 5, 'шинхоЪ5': -5, 'шинхоЪ6': 0},  # хБ╢цХ░чд║хФЖ
    'уГЖуГ╝уГЦуГл3': {'шинхоЪ1': -20, 'шинхоЪ2': -10, 'шинхоЪ4': 10, 'шинхоЪ5': 20, 'шинхоЪ6': 10}, # хеЗцХ░щлШшинхоЪчд║хФЖ
    'уГЖуГ╝уГЦуГл4': {'шинхоЪ1': -20, 'шинхоЪ2': 10, 'шинхоЪ4': 20, 'шинхоЪ5': 10, 'шинхоЪ6': 20}  # хБ╢цХ░щлШшинхоЪчд║хФЖ
}

# ATч╡Вф║ЖчФ╗щЭвуБоуВ╣уВ│уВвя╝ИчФ╗хГПцГЕха▒уБлхЯ║уБеуБПя╝Й
at_end_screen_options_display = {
    'уГХуГйуГ│уВ╖уГ╝уГМ': 'шинхоЪ6ц┐ГхОЪ',
    'уБЧуВНуБМуБня╝ЖхЛЭя╝Жщ│┤ц╡╖': 'шинхоЪ4ф╗еф╕Кц┐ГхОЪ',
    'уВоуВдя╝ЛщШ┐ч┤лшК▒': 'шинхоЪ2ф╗еф╕Кц┐ГхОЪ',
    'хе│уВнуГгуГй5ф║║': 'хБ╢цХ░шинхоЪчд║хФЖ',
    'цХ╡уВнуГгуГй5ф║║': 'хеЗцХ░шинхоЪчд║хФЖ',
    'хЛЭя╝Лщ│┤ц╡╖': 'уГЗуГХуВйуГлуГИ', # уГЗуГХуВйуГлуГИчФ╗щЭв
    # ф╗еф╕ЛуБпчФ╗хГПуБЛуВЙуБош┐╜хКачФ╗щЭв
    'хеЗцХ░уБощлШшинхоЪчд║хФЖчФ╗щЭв': 'хеЗцХ░уБощлШшинхоЪчд║хФЖ',
    'хБ╢цХ░уБощлШшинхоЪчд║хФЖчФ╗щЭв': 'хБ╢цХ░уБощлШшинхоЪчд║хФЖ',
    'шинхоЪ2ф╗еф╕Кчв║хоЪчФ╗щЭв': 'шинхоЪ2ф╗еф╕Кчв║хоЪ',
    'шинхоЪ456чв║хоЪчФ╗щЭв': 'шинхоЪ456чв║хоЪ',
}
at_end_screen_scores = {
    'уГХуГйуГ│уВ╖уГ╝уГМ':           {'шинхоЪ1': -100, 'шинхоЪ2': -100, 'шинхоЪ4': -100, 'шинхоЪ5': -100, 'шинхоЪ6': 500}, # шинхоЪ6ц┐ГхОЪ
    'уБЧуВНуБМуБня╝ЖхЛЭя╝Жщ│┤ц╡╖':     {'шинхоЪ1': -100, 'шинхоЪ2': -100, 'шинхоЪ4': 100, 'шинхоЪ5': 100, 'шинхоЪ6': 100},  # шинхоЪ4ф╗еф╕Кц┐ГхОЪ
    'уВоуВдя╝ЛщШ┐ч┤лшК▒':           {'шинхоЪ1': -50,  'шинхоЪ2': 50,   'шинхоЪ4': 50,   'шинхоЪ5': 50,   'шинхоЪ6': 50},   # шинхоЪ2ф╗еф╕Кц┐ГхОЪ
    'хе│уВнуГгуГй5ф║║':            {'шинхоЪ1': -10,  'шинхоЪ2': 20,   'шинхоЪ4': 10,   'шинхоЪ5': -10,  'шинхоЪ6': 0},    # хБ╢цХ░шинхоЪчд║хФЖ
    'цХ╡уВнуГгуГй5ф║║':            {'шинхоЪ1': 20,   'шинхоЪ2': -10,  'шинхоЪ4': -10,  'шинхоЪ5': 10,   'шинхоЪ6': 0},    # хеЗцХ░шинхоЪчд║хФЖ
    'хЛЭя╝Лщ│┤ц╡╖':               {'шинхоЪ1': 0,    'шинхоЪ2': 0,    'шинхоЪ4': 0,    'шинхоЪ5': 0,    'шинхоЪ6': 0},    # уГЗуГХуВйуГлуГИ
    'хеЗцХ░уБощлШшинхоЪчд║хФЖчФ╗щЭв':   {'шинхоЪ1': -50,  'шинхоЪ2': -20,  'шинхоЪ4': 20,   'шинхоЪ5': 50,   'шинхоЪ6': 20},   # хеЗцХ░уБощлШшинхоЪчд║хФЖ
    'хБ╢цХ░уБощлШшинхоЪчд║хФЖчФ╗щЭв':   {'шинхоЪ1': -50,  'шинхоЪ2': 20,   'шинхоЪ4': 50,   'шинхоЪ5': 20,   'шинхоЪ6': 50},   # хБ╢цХ░уБощлШшинхоЪчд║хФЖ
    'шинхоЪ2ф╗еф╕Кчв║хоЪчФ╗щЭв':      {'шинхоЪ1': -100, 'шинхоЪ2': 100,  'шинхоЪ4': 100,  'шинхоЪ5': 100,  'шинхоЪ6': 100},  # шинхоЪ2ф╗еф╕Кчв║хоЪ
    'шинхоЪ456чв║хоЪчФ╗щЭв':        {'шинхоЪ1': -100, 'шинхоЪ2': -100, 'шинхоЪ4': 150,  'шинхоЪ5': 150,  'шинхоЪ6': 150},  # шинхоЪ456чв║хоЪ
}

# ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕Кф╣ЧуБЫуВ╣уВ│уВв
olympia_addon_scores = {
    '+6 (шинхоЪ6ц┐ГхОЪ)': {'шинхоЪ1': -100, 'шинхоЪ2': -100, 'шинхоЪ4': -100, 'шинхоЪ5': -100, 'шинхоЪ6': 300},
    '+4 (шинхоЪ4ф╗еф╕Кц┐ГхОЪ)': {'шинхоЪ1': -50, 'шинхоЪ2': -50, 'шинхоЪ4': 100, 'шинхоЪ5': 100, 'шинхоЪ6': 100},
    '+20 (шинхоЪ2ф╗еф╕Кц┐ГхОЪ)': {'шинхоЪ1': -20, 'шинхоЪ2': 50, 'шинхоЪ4': 50, 'шинхоЪ5': 50, 'шинхоЪ6': 50}
}

# уВиуГ│уГЗуВгуГ│уВ░уГйуГ│уГЧуВ╣уВ│уВв
ending_lamp_scores = {
    'шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)': {'шинхоЪ1': -1000, 'шинхоЪ2': -1000, 'шинхоЪ4': -1000, 'шинхоЪ5': -1000, 'шинхоЪ6': 1000} # щЭЮх╕╕уБлх╝╖уБДчд║хФЖ
}

# щБЛхС╜уБоф╕АцТГуВ╣уВ│уВвя╝ИуГжуГ╝уВ╢уГ╝цГЕха▒уБлхЯ║уБеуБНщЗНуБ┐ф╗ШуБСя╝Й
unmei_success_score = {
    'хИЭхЫЮ_шЗкхКЫцИРхКЯ_щлШшинхоЪ': 100, # уГмуВвх╜╣уБкуБЧуГ╗цЬАч╡ВуВ▓уГ╝уГах░Пх╜╣уБкуБЧцИРхКЯ
    'ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ6_цЬЯх╛Е': 50, # 80%ф╗еф╕К
    'ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ4_цЬЯх╛Е': 30, # 60%ф╗еф╕К
    'ч╢Щч╢Ъ_шЗкхКЫхд▒цХЧ_ф╜ОшинхоЪ_чд║хФЖ': -30 # ф╜ОуБДцИРхКЯчОЗ
}

# ATчЫ┤цТГуВ╣уВ│уВв
at_direct_hit_score_per_hit = {'шинхоЪ4': 50, 'шинхоЪ5': 70, 'шинхоЪ6': 100} # 1хЫЮуБВуБЯуВКуБохКачВ╣

# --- A. уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣хП░шЗкф╜УуБоцМЩхЛХуБлщЦвуБЩуВЛхЕехКЫ ---
st.header("A. хП░уБоцМЩхЛХуБлщЦвуБЩуВЛхЕехКЫ")

col1, col2 = st.columns(2)
with col1:
    total_games = st.number_input("1. ч╖ПуВ▓уГ╝уГацХ░", min_value=0, value=0, step=100)
with col2:
    at_first_hit = st.number_input("2. ATхИЭх╜УуБЯуВКхЫЮцХ░", min_value=0, value=0)

# CZх╜УщБ╕х▒ецн┤
st.subheader("3. CZх╜УщБ╕цЩВуБоуВ▓уГ╝уГацХ░ (шдЗцХ░хЕехКЫхПп)")
st.info("ЁЯТб ц╢▓цЩ╢уБоуГЭуВдуГ│уГИцХ░уБзхЕехКЫуБЧуБжуБПуБауБХуБДуАВ1000ptш╢ЕуБИуБоCZх╜УщБ╕уБпшинхоЪ6цЬЯх╛Ех║жуВТхдзуБНуБПф╕ЛуБТуБ╛уБЩуАВ")
if 'cz_data' not in st.session_state:
    st.session_state.cz_data = []

def add_cz_entry():
    st.session_state.cz_data.append({'point': '', 'from_karakuri_rareyaku': False})

def remove_cz_entry(index):
    st.session_state.cz_data.pop(index)

st.button("CZх╜УщБ╕х▒ецн┤уВТш┐╜хКа", on_click=add_cz_entry)

for i, cz_entry in enumerate(st.session_state.cz_data):
    cz_cols = st.columns([0.4, 0.4, 0.2])
    with cz_cols[0]:
        st.session_state.cz_data[i]['point'] = st.number_input(f"CZ {i+1}хЫЮчЫо: х╜УщБ╕уГЭуВдуГ│уГИ", min_value=0, value=cz_entry['point'] if cz_entry['point'] != '' else 0, key=f"cz_point_{i}")
    with cz_cols[1]:
        st.session_state.cz_data[i]['from_karakuri_rareyaku'] = st.checkbox(f"уБЛуВЙуБПуВКуГмуВвх╜╣хеСцйЯя╝Я", value=cz_entry['from_karakuri_rareyaku'], key=f"cz_rareyaku_{i}")
    with cz_cols[2]:
        st.button("хЙКщЩд", key=f"remove_cz_{i}", on_click=remove_cz_entry, args=(i,))

# ATч╡Вф║ЖчФ╗щЭв
st.subheader("4. ATч╡Вф║ЖчФ╗щЭв")
# уВкуГЧуВ╖уГзуГ│уГкуВ╣уГИуВТчв║хоЯуБлхПЦх╛ЧуБЩуВЛуБЯуВБуБлуАБуБУуБУуБзцШОчд║чЪДуБлш╛ЮцЫ╕уБЛуВЙуГкуВ╣уГИуВТф╜ЬцИР
end_screen_options_list = list(at_end_screen_options_display.keys()) 

selected_end_screens = st.multiselect(
    "хЗ║чП╛уБЧуБЯATч╡Вф║ЖчФ╗щЭвуВТхЕиуБжщБ╕цКЮуБЧуБжуБПуБауБХуБД",
    options=end_screen_options_list, # тШЕтШЕтШЕ уБУуБУуВТф┐оцнг тШЕтШЕтШЕ
    default=[]
)
end_screen_counts = {}
for screen in selected_end_screens:
    end_screen_counts[screen] = st.number_input(f"{screen} уБохЗ║чП╛хЫЮцХ░", min_value=0, value=0, key=f"end_screen_count_{screen}")

# ATф╕нуБоуГЖуГ╝уГЦуГлщБ╕цКЮ (ATуБФуБиуБлцЬАхдз3хЫЮуАБшдЗцХ░ATхЫЮцХ░хИЖхЕехКЫ)
st.subheader("5. ATф╕нуБоуГЖуГ╝уГЦуГлщБ╕цКЮ")
st.info("ЁЯТб хРДATуБоуГЖуГ╝уГЦуГля╝ИATщЦЛхзЛцЩВуАБцИРхКЯ1хЫЮчЫоуАБцИРхКЯ2хЫЮчЫоя╝ЙуВТщБ╕цКЮуБЧуБжуБПуБауБХуБДуАВ")
if 'at_tables' not in st.session_state:
    st.session_state.at_tables = []

def add_at_entry():
    st.session_state.at_tables.append({'start': 'щБ╕цКЮуБкуБЧ', 'success1': 'щБ╕цКЮуБкуБЧ', 'success2': 'щБ╕цКЮуБкуБЧ'})

def remove_at_entry(index):
    st.session_state.at_tables.pop(index)

st.button("ATхЫЮуВТш┐╜хКа", on_click=add_at_entry)
table_options = ['щБ╕цКЮуБкуБЧ', 'уГЖуГ╝уГЦуГл1 (хеЗцХ░чд║хФЖ)', 'уГЖуГ╝уГЦуГл2 (хБ╢цХ░чд║хФЖ)', 'уГЖуГ╝уГЦуГл3 (хеЗцХ░щлШшинхоЪчд║хФЖ)', 'уГЖуГ╝уГЦуГл4 (хБ╢цХ░щлШшинхоЪчд║хФЖ)']

for i, at_table in enumerate(st.session_state.at_tables):
    st.markdown(f"**--- AT {i+1}хЫЮчЫо ---**")
    at_cols = st.columns([0.3, 0.3, 0.3, 0.1])
    with at_cols[0]:
        st.session_state.at_tables[i]['start'] = st.selectbox(f"AT{i+1}щЦЛхзЛцЩВ", options=table_options, index=table_options.index(at_table['start']), key=f"at{i}_start")
    with at_cols[1]:
        st.session_state.at_tables[i]['success1'] = st.selectbox(f"AT{i+1}цИРхКЯ1хЫЮчЫо", options=table_options, index=table_options.index(at_table['success1']), key=f"at{i}_success1")
    with at_cols[2]:
        st.session_state.at_tables[i]['success2'] = st.selectbox(f"AT{i+1}цИРхКЯ2хЫЮчЫо", options=table_options, index=table_options.index(at_table['success2']), key=f"at{i}_success2")
    with at_cols[3]:
        st.button("хЙКщЩд", key=f"remove_at_{i}", on_click=remove_at_entry, args=(i,))

# ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕нуБоф╕Кф╣ЧуБЫцХ░хнЧ
st.subheader("6. ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕нуБоф╕Кф╣ЧуБЫцХ░хнЧ")
olympia_addon = st.selectbox(
    "цЬАуВВх╝╖уБДчд║хФЖуБоф╕Кф╣ЧуБЫцХ░хнЧуВТщБ╕цКЮуБЧуБжуБПуБауБХуБД",
    options=['щБ╕цКЮуБкуБЧ', '+6 (шинхоЪ6ц┐ГхОЪ)', '+4 (шинхоЪ4ф╗еф╕Кц┐ГхОЪ)', '+20 (шинхоЪ2ф╗еф╕Кц┐ГхОЪ)', 'уБЭуБоф╗Ц']
)

# уВиуГ│уГЗуВгуГ│уВ░ф╕нуБоуГмуВвх╜╣цЩВуАБчнРф╜Уф╕КщГиуГйуГ│уГЧшЙ▓
st.subheader("7. уВиуГ│уГЗуВгуГ│уВ░ф╕нуБоуГмуВвх╜╣цЩВуГйуГ│уГЧшЙ▓")
ending_lamp = st.selectbox(
    "уВиуГ│уГЗуВгуГ│уВ░ф╕нуБоуГмуВвх╜╣цЩВуАБчнРф╜Уф╕КщГиуГйуГ│уГЧшЙ▓уБпя╝Я",
    options=['щБ╕цКЮуБкуБЧ', 'шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)', 'уБЭуБоф╗Ц']
)

# щБЛхС╜уБоф╕АцТГуБоцИРхКЯчК╢ц│Б (шдЗцХ░хЫЮхЕехКЫ)
st.subheader("8. щБЛхС╜уБоф╕АцТГуБоцИРхКЯчК╢ц│Б")
st.info("ЁЯТб уАМуГмуВвх╜╣уБкуБЧуАНуБЛуБдуАМцЬАч╡ВуВ▓уГ╝уГах░Пх╜╣уБкуБЧуАНуБзуБоцИРхКЯуБпх╝╖хКЫуБкщлШшинхоЪчд║хФЖуБзуБЩуАВ")

if 'unmei_first' not in st.session_state:
    st.session_state.unmei_first = []
if 'unmei_continue' not in st.session_state:
    st.session_state.unmei_continue = []

def add_unmei_first():
    if len(st.session_state.unmei_first) < 10: # цЬАхдз10хЫЮ
        st.session_state.unmei_first.append({'success': 'щБ╕цКЮуБкуБЧ', 'trigger': 'щБ╕цКЮуБкуБЧ'})
    else:
        st.warning("цЬАхИЭуБощБЛхС╜уБоф╕АцТГуБоцЬАхдзхЕехКЫхЫЮцХ░уБлщБФуБЧуБ╛уБЧуБЯуАВ")

def remove_unmei_first(index):
    st.session_state.unmei_first.pop(index)

def add_unmei_continue():
    if len(st.session_state.unmei_continue) < 15: # цЬАхдз15хЫЮ
        st.session_state.unmei_continue.append({'success': 'щБ╕цКЮуБкуБЧ', 'trigger': 'щБ╕цКЮуБкуБЧ'})
    else:
        st.warning("ч╢Щч╢ЪуВТуБЛуБСуБЯщБЛхС╜уБоф╕АцТГуБоцЬАхдзхЕехКЫхЫЮцХ░уБлщБФуБЧуБ╛уБЧуБЯуАВ")

def remove_unmei_continue(index):
    st.session_state.unmei_continue.pop(index)

unmei_options = ['щБ╕цКЮуБкуБЧ', 'цИРхКЯ', 'хд▒цХЧ']
trigger_options = ['щБ╕цКЮуБкуБЧ', 'х╝╖уГмуВвх╜╣', 'х╝▒уГмуВвх╜╣', 'цЬАч╡ВуВ▓уГ╝уГах░Пх╜╣', 'уГмуВвх╜╣уБкуБЧуГ╗цЬАч╡ВуВ▓уГ╝уГах░Пх╜╣уБкуБЧ']

st.markdown("**цЬАхИЭуБощБЛхС╜уБоф╕АцТГ (цЬАхдз10хЫЮ)**")
st.button("цЬАхИЭуБощБЛхС╜уБоф╕АцТГуВТш┐╜хКа", on_click=add_unmei_first)
for i, entry in enumerate(st.session_state.unmei_first):
    cols = st.columns([0.4, 0.4, 0.2])
    with cols[0]:
        st.session_state.unmei_first[i]['success'] = st.selectbox(f"хИЭхЫЮщБЛхС╜ {i+1}хЫЮчЫо: ч╡РцЮЬ", options=unmei_options, index=unmei_options.index(entry['success']), key=f"unmei_first_success_{i}")
    with cols[1]:
        # тШЕтШЕтШЕуБУуБУуБМхдЙцЫ┤чВ╣тШЕтШЕя╝ЪValueErrorхЫЮщБ┐ & цнгуБЧуБДoptionsхдЙцХ░уВТцМЗхоЪ
        current_trigger_index = trigger_options.index(entry['trigger']) if entry['trigger'] in trigger_options else 0
        st.session_state.unmei_first[i]['trigger'] = st.selectbox(f"хИЭхЫЮщБЛхС╜ {i+1}хЫЮчЫо: хеСцйЯ", options=trigger_options, index=current_trigger_index, key=f"unmei_first_trigger_{i}")
    with cols[2]:
        st.button("хЙКщЩд", key=f"remove_unmei_first_{i}", on_click=remove_unmei_first, args=(i,))

st.markdown("**ч╢Щч╢ЪуВТуБЛуБСуБЯщБЛхС╜уБоф╕АцТГ (цЬАхдз15хЫЮ)**")
st.button("ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГуВТш┐╜хКа", on_click=add_unmei_continue) # тШЕтШЕтШЕуБУуБУуБМхдЙцЫ┤чВ╣тШЕтШЕя╝Ъon_on_clickуВТon_clickуБлф┐оцнг
for i, entry in enumerate(st.session_state.unmei_continue):
    cols = st.columns([0.4, 0.4, 0.2])
    with cols[0]:
        st.session_state.unmei_continue[i]['success'] = st.selectbox(f"ч╢Щч╢ЪщБЛхС╜ {i+1}хЫЮчЫо: ч╡РцЮЬ", options=unmei_options, index=unmei_options.index(entry['success']), key=f"unmei_continue_success_{i}")
    with cols[1]:
        # тШЕтШЕтШЕуБУуБУуБМхдЙцЫ┤чВ╣тШЕтШЕя╝ЪValueErrorхЫЮщБ┐ & цнгуБЧуБДoptionsхдЙцХ░уВТцМЗхоЪ
        current_trigger_index = trigger_options.index(entry['trigger']) if entry['trigger'] in trigger_options else 0
        st.session_state.unmei_continue[i]['trigger'] = st.selectbox(f"ч╢Щч╢ЪщБЛхС╜ {i+1}хЫЮчЫо: хеСцйЯ", options=trigger_options, index=current_trigger_index, key=f"unmei_continue_trigger_{i}")
    with cols[2]:
        st.button("хЙКщЩд", key=f"remove_unmei_continue_{i}", on_click=remove_unmei_continue, args=(i,))

# ATчЫ┤цТГ
st.subheader("9. ATчЫ┤цТГ")
at_direct_hit_count = st.number_input("ATчЫ┤цТГхЫЮцХ░", min_value=0, value=0)
if at_direct_hit_count > 0:
    st.info("ЁЯТб ATчЫ┤цТГуБпф╜ОшинхоЪуБзуБпчиАуБкх╝╖хКЫуБкщлШшинхоЪчд║хФЖуБзуБЩуАВ")

# --- B. х║ЧшИЧуГ╗хдЦщГишжБхЫауБлщЦвуБЩуВЛхЕехКЫ (ф╗╗цДПхЕехКЫ) ---
st.header("B. х║ЧшИЧуГ╗хдЦщГишжБхЫауБлщЦвуБЩуВЛхЕехКЫ (ф╗╗цДП)")
st.info("ЁЯТб уБУуБбуВЙуБощаЕчЫоуБпф╗╗цДПуБзуБЩуАВхЕехКЫуБЩуВЛуБиуВИуВКхоЯцИжчЪДуБкхИдцЦнуБМхПпшГ╜уБзуБЩуАВ")

# уГЫуГ╝уГлхЕиф╜УуБоуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣шинхоЪцКХхЕехВ╛хРС
st.subheader("1. уГЫуГ╝уГлхЕиф╜УуБоуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣шинхоЪцКХхЕехВ╛хРС")
hall_karakuri_tendency = st.radio(
    "х╜УуГЫуГ╝уГлуБпуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уБлцЩоцо╡уБЛуВЙшинхоЪуВТхЕеуВМуВЛхВ╛хРСуБМуБВуВКуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'щлШуБД', 'цЩощАЪ', 'ф╜ОуБД'],
    index=0, horizontal=True
)

# уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уБпуГЫуГ╝уГлуБоф╕╗хКЫцйЯчиоуБЛ
st.subheader("2. уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уБпуГЫуГ╝уГлуБоф╕╗хКЫцйЯчиоуБЛ")
is_main_machine = st.radio(
    "уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уБпуГЫуГ╝уГлуБоф╕╗хКЫцйЯчиоя╝ИщлШчи╝хГНуГ╗ф║║ц░ЧцйЯчиоя╝ЙуБзуБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБпуБД', 'уБДуБДуБИ'],
    index=0, horizontal=True
)

# щБКцКАцЧеуБпчЙ╣хоЪуВдуГЩуГ│уГИцЧеуБЛ
st.subheader("3. щБКцКАцЧеуБпчЙ╣хоЪуВдуГЩуГ│уГИцЧеуБЛ")
event_day_type = st.radio(
    "цЬмцЧеуБпчЙ╣хоЪуВдуГЩуГ│уГИцЧеуБзуБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'х╝╖уБДуВдуГЩуГ│уГИцЧе (ф╛Л: хСих╣┤уАБхЕихП░ч│╗чд║хФЖ)', 'х╝▒уБДуВдуГЩуГ│уГИцЧе (ф╛Л: чЙ╣хоЪцйЯчиочд║хФЖ)', 'уВдуГЩуГ│уГИуБкуБЧ'],
    index=0, horizontal=True
)

# уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣щЦвщАгуБохПЦцЭРуГ╗х║ГхСКуБоцЬЙчДб
st.subheader("4. уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣щЦвщАгуБохПЦцЭРуГ╗х║ГхСКуБоцЬЙчДб")
karakuri_coverage = st.radio(
    "уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣щЦвщАгуБохПЦцЭРуВДх║ГхСКуБпхЕеуБгуБжуБДуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБВуВЛ', 'уБкуБД'],
    index=0, horizontal=True
)

# щлШшинхоЪцКХхЕечд║хФЖч│╗уБохПЦцЭРуГ╗х║ГхСКуБоцЬЙчДб
st.subheader("5. щлШшинхоЪцКХхЕечд║хФЖч│╗уБохПЦцЭРуГ╗х║ГхСКуБоцЬЙчДб")
high_setting_coverage = st.radio(
    "уГЫуГ╝уГлхЕиф╜УуБзщлШшинхоЪцКХхЕеуВТчд║хФЖуБЩуВЛхПЦцЭРуВДх║ГхСКуБпхЕеуБгуБжуБДуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБВуВЛ', 'уБкуБД'],
    index=0, horizontal=True
)

# щБКцКАцЧеуБпщАЪх╕╕уБохЦ╢ценцЧеуБЛ
st.subheader("6. щБКцКАцЧеуБпщАЪх╕╕уБохЦ╢ценцЧеуБЛ")
is_normal_day = st.radio(
    "цЬмцЧеуБпщАЪх╕╕уБохЦ╢ценцЧеуБзуБЩуБЛя╝Я (уВдуГЩуГ│уГИцЧеуБкуБйуВТшАГцЕо)",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБпуБД', 'уБДуБДуБИ'],
    index=0, horizontal=True
)

# уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣х╛ЧцДПц╝ФшАЕуБоцЭех║ЧцЬЙчДб
st.subheader("7. уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣х╛ЧцДПц╝ФшАЕуБоцЭех║ЧцЬЙчДб")
performer_presence = st.radio(
    "уБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уВТх╛ЧцДПуБиуБЩуВЛцЭех║Чц╝ФшАЕуБпуБДуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБДуВЛ', 'уБДуБкуБД'],
    index=0, horizontal=True
)

# щБОхО╗уБлх╜УуГЫуГ╝уГлуБзуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣шинхоЪ6чв║хоЪч╡МщиУуБоцЬЙчДб
st.subheader("8. щБОхО╗уБлх╜УуГЫуГ╝уГлуБзуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣шинхоЪ6чв║хоЪч╡МщиУуБоцЬЙчДб")
seen_setting6_in_hall = st.radio(
    "х╜УуГЫуГ╝уГлуБзщБОхО╗уБлуБЛуВЙуБПуВКуВ╡уГ╝уВлуВ╣уБошинхоЪ6чв║хоЪчФ╗щЭвуВТшжЛуБЯуБУуБиуБМуБВуВКуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'уБВуВЛ', 'уБкуБД'],
    index=0, horizontal=True
)

# х╜УуГЫуГ╝уГлуБошинхоЪ6ф╜┐чФихВ╛хРС
st.subheader("9. х╜УуГЫуГ╝уГлуБошинхоЪ6ф╜┐чФихВ╛хРС")
hall_setting6_tendency = st.radio(
    "х╜УуГЫуГ╝уГлуБпцЩоцо╡уБЛуВЙшинхоЪ6уВТф╜┐уБЖхВ╛хРСуБМуБВуВКуБ╛уБЩуБЛя╝Я",
    options=['щБ╕цКЮуБЧуБкуБД', 'щлШуБД', 'цЩощАЪ', 'ф╜ОуБД'],
    index=0, horizontal=True
)

# ф╗ЦуБохП░уБочК╢ц│Б (шЗкчФ▒шиШш┐░)
st.subheader("10. ф╗ЦуБохП░уБочК╢ц│Б")
other_machine_status = st.text_area(
    "хСихЫ▓уБохП░я╝ИхРМуБШцйЯчиоуВДф╗ЦуБоцйЯчиоя╝ЙуБочК╢ц│БуВТч░бц╜ФуБлхЕехКЫуБЧуБжуБПуБауБХуБДуАВ"
)

# --- хИдхИехоЯшбМуГЬуВ┐уГ│ ---
st.markdown("---")
if st.button("шинхоЪуВТхИдхИеуБЩуВЛ", key="run_analysis"):
    st.subheader("### хИдхИеч╡РцЮЬ")
    st.write("---")

    # хРДшинхоЪуБохПпшГ╜цАзуВ╣уВ│уВвуВТхИЭцЬЯхМЦ
    setting_likelihood_scores = initial_setting_scores.copy()

    # --- A. хП░уБоцМЩхЛХуБлщЦвуБЩуВЛшйХф╛б ---

    # ATхИЭх╜УуБЯуВКчв║чОЗ
    if total_games > 0 and at_first_hit > 0:
        at_first_hit_rate = total_games / at_first_hit
        st.write(f"**ATхИЭх╜УуБЯуВКчв║чОЗ: 1/{at_first_hit_rate:.2f}**")
        # ф╗оуБочЫохоЙуБзхРДшинхоЪуБлуВ╣уВ│уВвхКачоЧ/ц╕ЫчоЧ
        if at_first_hit_rate < 300: # щлШшинхоЪхпДуВК
            setting_likelihood_scores['шинхоЪ4'] += 10
            setting_likelihood_scores['шинхоЪ5'] += 20
            setting_likelihood_scores['шинхоЪ6'] += 30
            setting_likelihood_scores['шинхоЪ1'] -= 10
            setting_likelihood_scores['шинхоЪ2'] -= 5
        elif at_first_hit_rate > 400: # ф╜ОшинхоЪхпДуВК
            setting_likelihood_scores['шинхоЪ1'] += 20
            setting_likelihood_scores['шинхоЪ2'] += 10
            setting_likelihood_scores['шинхоЪ4'] -= 10
            setting_likelihood_scores['шинхоЪ5'] -= 20
            setting_likelihood_scores['шинхоЪ6'] -= 30
    else:
        st.write("**ATхИЭх╜УуБЯуВКцГЕха▒уБпхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУуАВ**")


    # CZх╜УщБ╕х▒ецн┤уБиуГЭуВдуГ│уГИ
    cz_success_points = [entry['point'] for entry in st.session_state.cz_data if entry['point'] is not None and entry['point'] > 0]
    karakuri_cz_count = sum(1 for entry in st.session_state.cz_data if entry['from_karakuri_rareyaku'])

    if cz_success_points:
        st.write(f"**CZх╜УщБ╕х▒ецн┤:** {cz_success_points} уГЭуВдуГ│уГИ")
        total_cz_count = len(cz_success_points)
        low_cz_count = sum(1 for p in cz_success_points if p <= 100) # 100Gф╗ехЖЕуВТцЧйуБДуБиуБЩуВЛчЫохоЙ
        over_1000_cz_count = sum(1 for p in cz_success_points if p >= 1000)

        if total_cz_count > 0 and low_cz_count / total_cz_count >= 0.3: # 30%ф╗еф╕КуБМф╜ОуГЭуВдуГ│уГИCZ
            st.write("тЖТ ф╜ОуВ▓уГ╝уГацХ░уБзуБоCZх╜УщБ╕уБМща╗ч╣БуБлчв║шкНуБХуВМуБ╛уБЧуБЯуАВ")
            for s in ['шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']:
                setting_likelihood_scores[s] += cz_point_score_adjust['low_point_bonus_high'].get(s, 0)
            for s in ['шинхоЪ1', 'шинхоЪ2']:
                setting_likelihood_scores[s] -= 5 # ф╜ОшинхоЪуБпф╜ОуВ▓уГ╝уГацХ░CZуБМх░СуБкуБД

        if over_1000_cz_count > 0:
            st.warning(f"**1000уГЭуВдуГ│уГИш╢ЕуБИуБоCZх╜УщБ╕ ({over_1000_cz_count}хЫЮ) уБМчв║шкНуБХуВМуБ╛уБЧуБЯуАВ**")
            for s, penalty in cz_point_score_adjust['over_1000_penalty'].items():
                setting_likelihood_scores[s] += penalty * over_1000_cz_count # шдЗцХ░хЫЮхЗ║уБЯуВЙуБХуВЙуБлц╕ЫчВ╣
            # чв║хоЪшжБч┤ауБиуБЧуБжуАБуВВуБЧ1000ptш╢ЕуБИуБМшдЗцХ░хЫЮуБВуВМуБ░шинхоЪ6уБохПпшГ╜цАзуВТуБ╗уБ╝0уБл
            if over_1000_cz_count >= 2:
                 setting_likelihood_scores['шинхоЪ6'] = max(0, setting_likelihood_scores['шинхоЪ6'] - 500) # х╝╖хКЫуБкц╕ЫчВ╣


        if karakuri_cz_count > 0 and total_games > 0:
            karakuri_cz_rate = total_games / karakuri_cz_count
            st.write(f"**уБЛуВЙуБПуВКуГмуВвх╜╣хеСцйЯCZчв║чОЗ: 1/{karakuri_cz_rate:.2f} ({karakuri_cz_count}хЫЮ)**")
            if karakuri_cz_rate < 500: # щлШшинхоЪчЫохоЙ
                setting_likelihood_scores['шинхоЪ4'] += 10
                setting_likelihood_scores['шинхоЪ5'] += 15
                setting_likelihood_scores['шинхоЪ6'] += 20
                setting_likelihood_scores['шинхоЪ1'] -= 5
            elif karakuri_cz_rate > 1000: # ф╜ОшинхоЪчЫохоЙ
                setting_likelihood_scores['шинхоЪ1'] += 10
                setting_likelihood_scores['шинхоЪ2'] += 5
                setting_likelihood_scores['шинхоЪ4'] -= 5
                setting_likelihood_scores['шинхоЪ5'] -= 10
                setting_likelihood_scores['шинхоЪ6'] -= 15
    else:
        st.write("**CZх╜УщБ╕х▒ецн┤уБпхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУуАВ**")

    # ATч╡Вф║ЖчФ╗щЭв
    strong_fixed_setting = None # чв║хоЪчд║хФЖуВТш┐╜ш╖б
    if selected_end_screens:
        st.write("**ATч╡Вф║ЖчФ╗щЭв:**")
        for screen, count in end_screen_counts.items():
            if count > 0:
                indication_text = at_end_screen_options_display.get(screen, 'чЙ╣хоЪчд║хФЖуБкуБЧ')
                st.write(f"- {screen} ({count}хЫЮхЗ║чП╛) тЖТ **{indication_text}**")
                
                # уВ╣уВ│уВвхКачоЧ
                for s in setting_likelihood_scores.keys():
                    if screen in at_end_screen_scores and s in at_end_screen_scores[screen]:
                        setting_likelihood_scores[s] += at_end_screen_scores[screen][s] * count

                # чв║хоЪчд║хФЖуБохЗжчРЖ (уБУуБУуБМцЬАщЗНшжБ)
                if "шинхоЪ6ц┐ГхОЪ" in indication_text:
                    strong_fixed_setting = 'шинхоЪ6'
                elif "шинхоЪ4ф╗еф╕Кц┐ГхОЪ" in indication_text or "шинхоЪ456чв║хоЪ" in indication_text:
                    if not strong_fixed_setting or strong_fixed_setting == 'шинхоЪ2ф╗еф╕К': # уВИуВКх╝╖уБДчд║хФЖуБМуБкуБДха┤хРИуБоуБ┐ф╕КцЫ╕уБН
                        strong_fixed_setting = 'шинхоЪ4ф╗еф╕К'
                elif "шинхоЪ2ф╗еф╕Кчв║хоЪ" in indication_text:
                    if not strong_fixed_setting: # уВИуВКх╝╖уБДчд║хФЖуБМуБкуБДха┤хРИуБоуБ┐ф╕КцЫ╕уБН
                        strong_fixed_setting = 'шинхоЪ2ф╗еф╕К'
    else:
        st.write("**ATч╡Вф║ЖчФ╗щЭвуБпхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУуАВ**")


    # ATф╕нуБоуГЖуГ╝уГЦуГлщБ╕цКЮ
    if st.session_state.at_tables:
        st.write("**ATф╕нуБоуГЖуГ╝уГЦуГлщБ╕цКЮх▒ецн┤:**")
        for i, at_table in enumerate(st.session_state.at_tables):
            st.write(f"AT {i+1}хЫЮчЫо:")
            selected_tables_base = [] # 'уГЖуГ╝уГЦуГлX'уБауБСуБохРНхЙН
            if at_table['start'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['start'].split(' ')[0])
            if at_table['success1'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['success1'].split(' ')[0])
            if at_table['success2'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['success2'].split(' ')[0])

            if selected_tables_base:
                st.write(f"- щБ╕цКЮуБХуВМуБЯуГЖуГ╝уГЦуГл: {', '.join([t + ' (' + table_indications[t] + ')' for t in selected_tables_base])}")
                for table_name in selected_tables_base:
                    for s in setting_likelihood_scores.keys():
                        setting_likelihood_scores[s] += table_score_weights.get(table_name, {}).get(s, 0)
            else:
                st.write("- (хЕехКЫуБкуБЧ)")

    # ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕нуБоф╕Кф╣ЧуБЫцХ░хнЧ
    if olympia_addon != 'щБ╕цКЮуБкуБЧ' and olympia_addon != 'уБЭуБоф╗Ц':
        st.write(f"**ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕нуБоф╕Кф╣ЧуБЫцХ░хнЧ: {olympia_addon}**")
        for s in setting_likelihood_scores.keys():
            if olympia_addon in olympia_addon_scores and s in olympia_addon_scores[olympia_addon]:
                setting_likelihood_scores[s] += olympia_addon_scores[olympia_addon][s]
        
        # чв║хоЪчд║хФЖуБохЗжчРЖ
        if '+6' in olympia_addon:
            strong_fixed_setting = 'шинхоЪ6'
        elif '+4' in olympia_addon:
            if not strong_fixed_setting or strong_fixed_setting == 'шинхоЪ2ф╗еф╕К':
                strong_fixed_setting = 'шинхоЪ4ф╗еф╕К'
        elif '+20' in olympia_addon:
            if not strong_fixed_setting: # уВИуВКх╝╖уБДчд║хФЖуБМуБкуБДха┤хРИуБоуБ┐ф╕КцЫ╕уБН
                strong_fixed_setting = 'шинхоЪ2ф╗еф╕К'
    else:
        st.write("**ш╕КуВМя╝БуВкуГкуГ│уГФуВвф╕Кф╣ЧуБЫцХ░хнЧуБпхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУуАВ**")


    # уВиуГ│уГЗуВгуГ│уВ░ф╕нуБоуГмуВвх╜╣цЩВуАБчнРф╜Уф╕КщГиуГйуГ│уГЧшЙ▓
    if ending_lamp == 'шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)':
        st.write("**уВиуГ│уГЗуВгуГ│уВ░ф╕нуГйуГ│уГЧшЙ▓: шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)**")
        for s in setting_likelihood_scores.keys():
            setting_likelihood_scores[s] += ending_lamp_scores['шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)'].get(s, 0)
        strong_fixed_setting = 'шинхоЪ6' # шЩ╣шЙ▓уБпцЬАуВВх╝╖уБДчв║хоЪ

    # щБЛхС╜уБоф╕АцТГуБоцИРхКЯчК╢ц│Б
    st.write("**щБЛхС╜уБоф╕АцТГ цИРхКЯчК╢ц│Б:**")
    total_first_unmei_eval = 0
    successful_first_unmei_no_forced = 0
    for entry in st.session_state.unmei_first:
        if entry['success'] != 'щБ╕цКЮуБкуБЧ': # цИРхКЯуГ╗хд▒цХЧуБйуБбуВЙуБзуВВшйжшбМхЫЮцХ░уБлуВлуВжуГ│уГИ
            total_first_unmei_eval += 1
            if entry['success'] == 'цИРхКЯ' and entry['trigger'] == 'уГмуВвх╜╣уБкуБЧуГ╗цЬАч╡ВуВ▓уГ╝уГах░Пх╜╣уБкуБЧ':
                successful_first_unmei_no_forced += 1
                for s in setting_likelihood_scores.keys():
                    setting_likelihood_scores[s] += unmei_success_score['хИЭхЫЮ_шЗкхКЫцИРхКЯ_щлШшинхоЪ'] # х╝╖хКЫуБкхКачВ╣

    if total_first_unmei_eval > 0:
        st.write(f"- цЬАхИЭуБощБЛхС╜уБоф╕АцТГя╝ИшЗкхКЫцИРхКЯя╝Й: {successful_first_unmei_no_forced}хЫЮ / {total_first_unmei_eval}хЫЮ")

    total_continue_unmei_eval = 0
    successful_continue_unmei_no_forced = 0
    for entry in st.session_state.unmei_continue:
        if entry['success'] != 'щБ╕цКЮуБкуБЧ': # цИРхКЯуГ╗хд▒цХЧуБйуБбуВЙуБзуВВшйжшбМхЫЮцХ░уБлуВлуВжуГ│уГИ
            total_continue_unmei_eval += 1
            if entry['success'] == 'цИРхКЯ' and entry['trigger'] not in ['х╝╖уГмуВвх╜╣', 'цЬАч╡ВуВ▓уГ╝уГах░Пх╜╣']: # х╝╖хИ╢цИРхКЯуВТщЩдхдЦ
                successful_continue_unmei_no_forced += 1

    if total_continue_unmei_eval > 0:
        continue_unmei_rate = successful_continue_unmei_no_forced / total_continue_unmei_eval
        st.write(f"- ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГя╝ИшЗкхКЫцИРхКЯя╝Й: {continue_unmei_rate:.2%} ({successful_continue_unmei_no_forced}хЫЮ / {total_continue_unmei_eval}хЫЮ)")
        
        # цИРхКЯчОЗуБлх┐ЬуБШуБжуВ╣уВ│уВвхКачоЧ
        if continue_unmei_rate >= unmei_success_rates['ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГ_шинхоЪ6_шЗкхКЫ']: # 80%
            setting_likelihood_scores['шинхоЪ6'] += unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ6_цЬЯх╛Е']
            setting_likelihood_scores['шинхоЪ5'] += unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ4_цЬЯх╛Е'] # 5уВВцБйцБ╡уБВуВК
        elif continue_unmei_rate >= unmei_success_rates['ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГ_шинхоЪ4_шЗкхКЫ']: # 60%
            setting_likelihood_scores['шинхоЪ4'] += unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ4_цЬЯх╛Е']
            setting_likelihood_scores['шинхоЪ5'] += unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫцИРхКЯ_шинхоЪ4_цЬЯх╛Е']
        elif continue_unmei_rate < unmei_success_rates['ч╢Щч╢Ъ_шЗкхКЫхд▒цХЧ_ф╜ОшинхоЪ_чд║хФЖ'] and successful_continue_unmei_no_forced == 0: # ф╜ОуБДцИРхКЯчОЗуБЛуБдшЗкхКЫцИРхКЯуБМ0уБкуВЙуБХуВЙуБлц╕ЫчВ╣
            for s in ['шинхоЪ1', 'шинхоЪ2']:
                setting_likelihood_scores[s] += abs(unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫхд▒цХЧ_ф╜ОшинхоЪ_чд║хФЖ']) # ф╜ОшинхоЪхБ┤уБлхКачВ╣
            for s in ['шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']:
                setting_likelihood_scores[s] += unmei_success_score['ч╢Щч╢Ъ_шЗкхКЫхд▒цХЧ_ф╜ОшинхоЪ_чд║хФЖ'] # щлШшинхоЪхБ┤уБЛуВЙц╕ЫчВ╣
    else:
        st.write("щБЛхС╜уБоф╕АцТГуБпхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУуАВ")

    # ATчЫ┤цТГ
    if at_direct_hit_count > 0:
        st.write(f"**ATчЫ┤цТГхЫЮцХ░: {at_direct_hit_count}хЫЮ**")
        for s in ['шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']:
            setting_likelihood_scores[s] += at_direct_hit_score_per_hit.get(s, 0) * at_direct_hit_count # чЫ┤цТГхЫЮцХ░уБлх┐ЬуБШуБжхКачВ╣
        # чЫ┤цТГхЫЮцХ░уБМхдЪуБСуВМуБ░щлШшинхоЪчд║хФЖуВТх╝╖хМЦ
        if at_direct_hit_count >= 2:
            if not strong_fixed_setting: # ф╗ЦуБоуВИуВКх╝╖уБДчд║хФЖуБМуБкуБДха┤хРИуБоуБ┐
                 strong_fixed_setting = 'шинхоЪ4ф╗еф╕К'


    # --- B. х║ЧшИЧуГ╗хдЦщГишжБхЫауБлщЦвуБЩуВЛшйХф╛б (уВ╣уВ│уВвуГкуГ│уВ░) ---
    st.markdown("---")
    st.subheader("### х║ЧшИЧуГ╗хдЦщГишжБхЫауБЛуВЙуБошйХф╛б")
    
    external_score_multiplier = 0 # хдЦщГишжБхЫауБоч╖ПхРИчЪДуБкх╜▒щЯ┐х║ж

    external_score_map = {
        'hall_karakuri_tendency': {'щлШуБД': 0.10, 'цЩощАЪ': 0, 'ф╜ОуБД': -0.10, 'щБ╕цКЮуБЧуБкуБД': 0}, # хАНчОЗуБиуБЧуБжх╜▒щЯ┐
        'is_main_machine': {'уБпуБД': 0.05, 'уБДуБДуБИ': 0, 'щБ╕цКЮуБЧуБкуБД': 0},
        'event_day_type': {'х╝╖уБДуВдуГЩуГ│уГИцЧе (ф╛Л: хСих╣┤уАБхЕихП░ч│╗чд║хФЖ)': 0.20, 'х╝▒уБДуВдуГЩуГ│уГИцЧе (ф╛Л: чЙ╣хоЪцйЯчиочд║хФЖ)': 0.10, 'уВдуГЩуГ│уГИуБкуБЧ': -0.05, 'щБ╕цКЮуБЧуБкуБД': 0},
        'karakuri_coverage': {'уБВуВЛ': 0.05, 'уБкуБД': 0, 'щБ╕цКЮуБЧуБкуБД': 0},
        'high_setting_coverage': {'уБВуВЛ': 0.15, 'уБкуБД': 0, 'щБ╕цКЮуБЧуБкуБД': 0},
        'performer_presence': {'уБДуВЛ': 0.10, 'уБДуБкуБД': 0, 'щБ╕цКЮуБЧуБкуБД': 0},
        'seen_setting6_in_hall': {'уБВуВЛ': 0.25, 'уБкуБД': -0.10, 'щБ╕цКЮуБЧуБкуБД': 0}, # щБОхО╗уБохоЯч╕╛уБпщЭЮх╕╕уБлщЗНшжБ
        'hall_setting6_tendency': {'щлШуБД': 0.15, 'цЩощАЪ': 0, 'ф╜ОуБД': -0.15, 'щБ╕цКЮуБЧуБкуБД': 0},
    }

    # хРДхдЦщГишжБхЫауБохАНчОЗуВТшиИчоЧ
    external_score_multiplier += external_score_map['hall_karakuri_tendency'].get(hall_karakuri_tendency, 0)
    external_score_multiplier += external_score_map['is_main_machine'].get(is_main_machine, 0)
    external_score_multiplier += external_score_map['event_day_type'].get(event_day_type, 0)
    external_score_multiplier += external_score_map['karakuri_coverage'].get(karakuri_coverage, 0)
    external_score_multiplier += external_score_map['high_setting_coverage'].get(high_setting_coverage, 0)
    external_score_multiplier += external_score_map['performer_presence'].get(performer_presence, 0)
    external_score_multiplier += external_score_map['seen_setting6_in_hall'].get(seen_setting6_in_hall, 0)
    external_score_multiplier += external_score_map['hall_setting6_tendency'].get(hall_setting6_tendency, 0)

    # хРДшинхоЪуВ╣уВ│уВвуБлхдЦщГишжБхЫауБохАНчОЗуВТщБйчФия╝ИщлШшинхоЪуБлцЬЙхИйуБлхГНуБПуВИуБЖуБля╝Й
    # уБЯуБауБЧуАБф╜ОшинхоЪуБ╕уБох╜▒щЯ┐уБпх░ПуБХуБПуБЩуВЛ
    for s in setting_likelihood_scores.keys():
        if s in ['шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']:
            setting_likelihood_scores[s] *= (1 + external_score_multiplier)
        elif s in ['шинхоЪ1', 'шинхоЪ2']:
            # ф╜ОшинхоЪуБпхдЦщГишжБхЫауБох╜▒щЯ┐уВТх░ПуБХуБПуБЩуВЛуБЛуАБщАЖуБох╜▒щЯ┐уВТцМБуБЯуБЫуВЛя╝Иф╛Л: щлШшинхоЪцЬЯх╛ЕуБМщлШуБДцЧеуБпф╜ОшинхоЪуБоцЬЯх╛Ех║жуБМф╕ЛуБМуВЛя╝Й
            setting_likelihood_scores[s] *= (1 - external_score_multiplier * 0.5) # щлШшинхоЪхпДуВКуБкуВЙф╜ОшинхоЪуБпх░СуБЧф╕ЛуБМуВЛ
        setting_likelihood_scores[s] = max(1, setting_likelihood_scores[s]) # уВ╣уВ│уВвуБМ0ф╗еф╕ЛуБлуБкуВЙуБкуБДуВИуБЖуБлцЬАф╜О1уВТшинхоЪ

    if other_machine_status:
        st.write(f"**уБЭуБоф╗ЦуБохП░уБочК╢ц│Б:** {other_machine_status}")


    # --- ч╖ПхРИхИдхоЪя╝ИхРДшинхоЪуБохПпшГ╜цАзуБищлШшинхоЪцЬЯх╛Ех║жя╝Й ---
    st.markdown("---")
    st.subheader("### ч╖ПхРИхИдхоЪ")

    # чв║хоЪчд║хФЖуБлуВИуВЛуГХуВгуГлуВ┐уГкуГ│уВ░уБиуВ╣уВ│уВвуБох╝╖хИ╢
    if strong_fixed_setting:
        st.success(f"**ЁЯОЙ {strong_fixed_setting}чв║хоЪуГмуГЩуГлуБох╝╖хКЫуБкчд║хФЖуБМчв║шкНуБХуВМуБ╛уБЧуБЯя╝Б ЁЯОЙ**")
        for s in list(setting_likelihood_scores.keys()):
            if strong_fixed_setting == 'шинхоЪ6':
                if s != 'шинхоЪ6': setting_likelihood_scores[s] = 0
            elif strong_fixed_setting == 'шинхоЪ4ф╗еф╕К':
                if s in ['шинхоЪ1', 'шинхоЪ2']: setting_likelihood_scores[s] = 0
            elif strong_fixed_setting == 'шинхоЪ2ф╗еф╕К':
                if s == 'шинхоЪ1': setting_likelihood_scores[s] = 0
        
        # чв║хоЪчд║хФЖуБМхЗ║уБЯха┤хРИуБоуВ╣уВ│уВвшк┐цХ┤я╝ИшинхоЪ6уВТце╡члпуБлщлШуБПуБЩуВЛчнЙя╝Й
        if strong_fixed_setting == 'шинхоЪ6':
            setting_likelihood_scores['шинхоЪ6'] = 1000000 # хЬзхАТчЪДуБлщлШуБП
            # ф╗ЦуБошинхоЪуБп0уБлуБЩуВЛя╝ИцЧвуБлуБХуВМуБжуБДуВЛуБМх┐╡уБоуБЯуВБя╝Й
            for s in setting_likelihood_scores:
                if s != 'шинхоЪ6':
                    setting_likelihood_scores[s] = 0.0001 # хоМхЕиуБл0уБауБихЙ▓уВКчоЧуБзхХПщбМуБМхЗ║уВЛуБоуБзх╛ох░ПуБкхАд
        elif strong_fixed_setting == 'шинхоЪ4ф╗еф╕К':
            for s in ['шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']: setting_likelihood_scores[s] = max(1000, setting_likelihood_scores[s] * 2)
        elif strong_fixed_setting == 'шинхоЪ2ф╗еф╕К':
            for s in ['шинхоЪ2', 'шинхоЪ4', 'шинхоЪ5', 'шинхоЪ6']: setting_likelihood_scores[s] = max(500, setting_likelihood_scores[s] * 1.5)

    # хЕиуБжуБоуВ╣уВ│уВвуБМ0уБоха┤хРИуБохЗжчРЖ (х╛ох░ПуБкхАдуВТхЕеуВМуБЯуБоуБзф╕НшжБуБлуБкуВЛхПпшГ╜цАзуБВуВК)
    total_score_sum = sum(setting_likelihood_scores.values())
    if total_score_sum == 0 or total_score_sum < 0.01: # уБ╗уБ╝0уБоха┤хРИуВВшАГцЕо
        st.info("чП╛цЩВчВ╣уБзуБпхИдцЦнуБзуБНуВЛцЭРцЦЩуБМх░СуБкуБДуБЛуАБчЫ╕цо║уБЩуВЛшжБч┤ауБМхдЪуБДуБзуБЩуАВ")
        st.write("хРДшинхоЪуБохПпшГ╜цАз:")
        for s in setting_likelihood_scores.keys():
            st.write(f"- {s}: 0.00%")
        st.write("**щлШшинхоЪцЬЯх╛Ех║ж: 0.00%**")
    else:
        # хРДшинхоЪуБохПпшГ╜цАзуГСуГ╝уВ╗уГ│уГЖуГ╝уВ╕уВТшиИчоЧ
        st.write("**хРДшинхоЪуБохПпшГ╜цАз (чзБуБошгБщЗПуБлуВИуВЛчЫохоЙ):**")
        probabilities = {}
        for s, score in setting_likelihood_scores.items():
            prob = (score / total_score_sum) * 100
            probabilities[s] = prob
            st.write(f"- **{s}: {prob:.2f}%**")

        # щлШшинхоЪцЬЯх╛Ех║жя╝ИшинхоЪ4,5,6уБохРИшиИя╝Й
        high_setting_prob = probabilities.get('шинхоЪ4', 0) + probabilities.get('шинхоЪ5', 0) + probabilities.get('шинхоЪ6', 0)
        st.markdown(f"**### щлШшинхоЪцЬЯх╛Ех║ж: {high_setting_prob:.2f}%**")

        # ч╖ПхРИчЪДуБкуГбуГГуВ╗уГ╝уВ╕
        if high_setting_prob >= 80:
            st.success("ЁЯОЙ щлШшинхоЪя╝ИчЙ╣уБлшинхоЪ6я╝ЙуБзуБВуВЛхПпшГ╜цАзуБМщЭЮх╕╕уБлщлШуБДуБзуБЩя╝БЁЯОЙ")
        elif high_setting_prob >= 60:
            st.success("тЬи щлШшинхоЪуБзуБВуВЛхПпшГ╜цАзуБМщлШуБДуБзуБЩя╝БтЬи")
        elif high_setting_prob >= 40:
            st.warning("ЁЯСН ф╕нщЦУшинхоЪф╗еф╕КуАБуБ╛уБЯуБпщлШшинхоЪуБлцЬЯх╛ЕуБзуБНуВЛшжБч┤ауБМуБВуВКуБ╛уБЩуАВ")
        else:
            st.error("ЁЯСО ф╜ОшинхоЪуБзуБВуВЛхПпшГ╜цАзуБМщлШуБДуБЛуАБщлШшинхоЪуВТхРжхоЪуБЩуВЛшжБч┤ауБМшжЛуВЙуВМуБ╛уБЩуАВ")

    st.markdown("---")
    st.write("**шй│ч┤░уБкчд║хФЖхЖЕхо╣:**")
    # уБУуБУуБлхРДчд║хФЖхЖЕхо╣уВТуБ╛уБиуВБуВЛхЗжчРЖуВТхЖНш┐╜хКа
    final_indications = []
    # ATхИЭх╜УуБЯуВК
    if total_games > 0 and at_first_hit > 0:
        at_first_hit_rate = total_games / at_first_hit
        if at_first_hit_rate < 300: final_indications.append("ATхИЭх╜УуБЯуВКуБМшЙпхе╜уАВ")
        elif at_first_hit_rate > 400: final_indications.append("ATхИЭх╜УуБЯуВКуБМщЗНуВБуАВ")
    
    # CZх╜УщБ╕
    if cz_success_points:
        total_cz_count = len(cz_success_points)
        low_cz_count = sum(1 for p in cz_success_points if p <= 100)
        if total_cz_count > 0 and low_cz_count / total_cz_count >= 0.3: final_indications.append("ф╜ОуВ▓уГ╝уГацХ░уБзуБоCZх╜УщБ╕уБМща╗ч╣БуАВ")
        if over_1000_cz_count > 0: final_indications.append(f"1000ptш╢ЕуБИCZх╜УщБ╕({over_1000_cz_count}хЫЮ)уБВуВКуАВ")
        if karakuri_cz_count > 0 and total_games > 0:
            karakuri_cz_rate = total_games / karakuri_cz_count
            if karakuri_cz_rate < 500: final_indications.append("уБЛуВЙуБПуВКуГмуВвх╜╣хеСцйЯCZшЙпхе╜уАВ")
            elif karakuri_cz_rate > 1000: final_indications.append("уБЛуВЙуБПуВКуГмуВвх╜╣хеСцйЯCZф╜ОуВБуАВ")

    # ATч╡Вф║ЖчФ╗щЭв
    for screen, count in end_screen_counts.items():
        if count > 0:
            final_indications.append(f"ATч╡Вф║ЖчФ╗щЭвуАМ{screen}уАН({count}хЫЮ)хЗ║чП╛уАВ")

    # ATф╕нуБоуГЖуГ╝уГЦуГл
    for i, at_table in enumerate(st.session_state.at_tables):
        selected_tables_base = []
        if at_table['start'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['start'].split(' ')[0])
        if at_table['success1'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['success1'].split(' ')[0])
        if at_table['success2'] != 'щБ╕цКЮуБкуБЧ': selected_tables_base.append(at_table['success2'].split(' ')[0])
        for table_name in selected_tables_base:
            if table_name in ['уГЖуГ╝уГЦуГл3', 'уГЖуГ╝уГЦуГл4']:
                final_indications.append(f"ATф╕нуБо{table_name}щБ╕цКЮуВТчв║шкНуАВ")
            
    # ш╕КуВМя╝БуВкуГкуГ│уГФуВв
    if olympia_addon != 'щБ╕цКЮуБкуБЧ' and olympia_addon != 'уБЭуБоф╗Ц': final_indications.append(f"ш╕КуВМя╝БуВкуГкуГ│уГФуВвуБз{olympia_addon}хЗ║чП╛уАВ")

    # уВиуГ│уГЗуВгуГ│уВ░уГйуГ│уГЧ
    if ending_lamp == 'шЩ╣шЙ▓ (шинхоЪ6ц┐ГхОЪ)': final_indications.append("уВиуГ│уГЗуВгуГ│уВ░уГйуГ│уГЧшЩ╣шЙ▓хЗ║чП╛уАВ")

    # щБЛхС╜уБоф╕АцТГ
    if successful_first_unmei_no_forced > 0: final_indications.append(f"хИЭхЫЮщБЛхС╜уБоф╕АцТГуБзшЗкхКЫцИРхКЯ({successful_first_unmei_no_forced}хЫЮ)чв║шкНуАВ")
    if total_continue_unmei_eval > 0:
        if continue_unmei_rate >= unmei_success_rates['ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГ_шинхоЪ6_шЗкхКЫ']: final_indications.append("ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГцИРхКЯчОЗуБМщЭЮх╕╕уБлщлШуБДуАВ")
        elif continue_unmei_rate >= unmei_success_rates['ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГ_шинхоЪ4_шЗкхКЫ']: final_indications.append("ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГцИРхКЯчОЗуБМщлШуВБуАВ")
        elif continue_unmei_rate < unmei_success_rates['ч╢Щч╢Ъ_шЗкхКЫхд▒цХЧ_ф╜ОшинхоЪ_чд║хФЖ'] and successful_continue_unmei_no_forced == 0: final_indications.append("ч╢Щч╢ЪщБЛхС╜уБоф╕АцТГцИРхКЯчОЗуБМф╜ОуВБуАВ")

    # ATчЫ┤цТГ
    if at_direct_hit_count > 0: final_indications.append(f"ATчЫ┤цТГ({at_direct_hit_count}хЫЮ)чв║шкНуАВ")

    # хдЦщГишжБхЫа
    if external_score_multiplier > 0.05: final_indications.append("х║ЧшИЧуГ╗хдЦщГишжБхЫауБзщлШшинхоЪцЬЯх╛Ех║жуБМхвЧхКауАВ")
    elif external_score_multiplier < -0.05: final_indications.append("х║ЧшИЧуГ╗хдЦщГишжБхЫауБзщлШшинхоЪцЬЯх╛Ех║жуБМц╕Ых░СуАВ")
    if other_machine_status: final_indications.append(f"уБЭуБоф╗ЦуБохП░уБочК╢ц│Б: {other_machine_status}")


    if final_indications:
        for ind in final_indications:
            st.write(f"- {ind}")
    else:
        st.write("чП╛цЩВчВ╣уБзуБпчЙ╣цо╡уБочд║хФЖуБпуБВуВКуБ╛уБЫуВУуАВ")

    st.write("\n_тА╗шбичд║уБХуВМуВЛцХ░хАдуБпуАБцПРф╛ЫуБХуВМуБЯцГЕха▒уБичзБуБошгБщЗПуБлуВИуВЛщЗНуБ┐ф╗ШуБСуБлхЯ║уБеуБДуБЯуАМхПпшГ╜цАзуБочЫохоЙуАНуБзуБЩуАВхоЯщЪЫуБоч╡▒шиИчЪДуБкчв║чОЗуБзуБпуБВуВКуБ╛уБЫуВУуБоуБзуАБцЬАч╡ВчЪДуБкхИдцЦнуБпуБФшЗкш║луБош▓мф╗╗уБзшбМуБгуБжуБПуБауБХуБДуАВ_")